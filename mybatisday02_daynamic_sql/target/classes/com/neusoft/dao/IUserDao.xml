<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.dao.IUserDao">

    <!--    配置查询结果的列名和实体属性名的对应关系-->
<!--    id给定一个唯一标识是给select标签引用-->
<!--    type是指实体类的权限定类名-->
        <resultMap id="userMap" type="com.neusoft.domain.User">
    <!--        主键字段的对应-->
<!--            id指定主键-->
            <id property="userid" column="id"></id>
<!--            result用于指定非主键-->
<!--            column 是数据库中列名 -->
<!--            property用于指定实体类-->
            <result property="username" column="username"></result>
            <result property="useraddress" column="address"></result>
            <result property="usersex" column="sex"></result>
            <result property="userbirthday" column="birthday"></result>
        </resultMap>


    <select id="findAll" resultMap="userMap">
            select * from  user
        </select>

    <select id="findById" parameterType="INT" resultMap="userMap">
            select * from user where id = #{userid}
        </select>

    <insert id="saveUser" parameterType="user">
        <selectKey keyColumn="id" keyProperty="userid" resultType="INT">
            select  last_insert_id();
        </selectKey>
        insert into user (username,birthday,sex,address)
        values (#{username},#{userbirthday},#{usersex},#{useraddress})
    </insert>


     <update id="updateUser" parameterType="user" >
         update user set username = #{username},birthday = #{userbirthday},
         sex = #{usersex},address = #{useraddress} where id = #{userid}
     </update>


    <delete id="deleteUser" parameterType="java.lang.Integer" >
        delete from user where id = #{id}
    </delete>

    <select id="findByName" parameterType="java.lang.String" resultMap="userMap" >
        select  * from user where username like '%${value}%'
    </select>

    <select id="findTotal" resultType="java.lang.Integer">
        select count(*) from user
    </select>

<!--&lt;!&ndash;    // 动态sql&ndash;&gt;-->
<!--    <select id="findByCondition" resultMap="userMap" parameterType="user">-->
<!--        select * from user where 1=1-->
<!--        <if test="username != null" >-->
<!--            and username = #{username}-->
<!--        </if>-->
<!--    </select>-->
    <!--    // 动态sql2-->
    <select id="findByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="username != null" >
                and username = #{username}
            </if>
        </where>
    </select>

    <select id="findUserByQueryVo" parameterType="queryVo" resultMap="userMap">
        select * from user where username like #{user.username}
    </select>

    <select id="findUserByIds" parameterType="queryVo" resultMap="userMap">
        select * from user
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>


